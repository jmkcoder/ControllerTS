{% extends "shared/_base.njk" %}

{% block content %}
<div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <h1>{{ title }}</h1>
            <p class="lead">{{ subtitle }}</p>
            
            {% if ValidationSummary %}
                {{ ValidationSummary | safe }}
            {% endif %}
            
            {% if registrationSuccess %}
                <div class="alert alert-success" role="alert">
                    <h4 class="alert-heading">Registration Successful!</h4>
                    <p>Welcome, {{ userData.firstName }} {{ userData.lastName }}!</p>
                    <p>Your account has been created with the following details:</p>
                    <ul>
                        <li><strong>Username:</strong> {{ userData.username }}</li>
                        <li><strong>Email:</strong> {{ userData.email }}</li>
                        <li><strong>Department:</strong> {{ userData.department or 'Not specified' }}</li>
                    </ul>
                    <hr>
                    <p class="mb-0">You can now start using the application.</p>
                </div>
                
                <div class="mt-3">
                    <a href="/home" class="btn btn-primary">Go to Home</a>
                    <a href="/home/validation-demo" class="btn btn-secondary">Try Another Registration</a>
                </div>
            {% else %}
                <div class="row mt-4">
                    <div class="col-md-8">
                        <h3>User Registration</h3>
                        <p>This form demonstrates ASP.NET MVC style form helpers with automatic validation support.</p>
                        
                        <div id="registration-result"></div>

                        <!-- Using HtmlHelper.BeginForm() equivalent -->
                        {{ Html.BeginForm('registerUser', 'Home', {
                            resultTarget: 'registration-result',
                            successTemplate: '<div class="alert alert-success"><h4>Registration Successful!</h4><p>Welcome, {{result.userData.firstName}} {{result.userData.lastName}}!</p></div>',
                            errorTemplate: '<div class="alert alert-danger"><h4>Validation Errors</h4><p>Please correct the highlighted fields below.</p></div>',
                            resetOnSuccess: true,
                            htmlAttributes: { class: 'needs-validation', novalidate: true }
                        }) | safe }}

                            <div class="row">
                                <div class="col-md-6">
                                    <label for="firstName" class="form-label">First Name *</label>
                                    {{ Html.TextBox('firstName', '', null, {
                                        class: 'form-control',
                                        autocomplete: 'given-name',
                                        required: true,
                                        maxlength: '50'
                                    }) | safe }}
                                    {{ Html.ValidationMessage('firstName', ModelState) | safe }}
                                </div>
                                <div class="col-md-6">
                                    <label for="lastName" class="form-label">Last Name *</label>
                                    {{ Html.TextBox('lastName', '', null, {
                                        class: 'form-control',
                                        autocomplete: 'family-name',
                                        required: true,
                                        maxlength: '50'
                                    }) | safe }}
                                    {{ Html.ValidationMessage('lastName', ModelState) | safe }}
                                </div>
                            </div>

                            <div class="row mt-3">
                                <div class="col-md-6">
                                    <label for="username" class="form-label">Username *</label>
                                    {{ Html.TextBox('username', '', null, {
                                        class: 'form-control',
                                        autocomplete: 'username',
                                        required: true,
                                        maxlength: '30',
                                        pattern: '^[a-zA-Z0-9_-]+$'
                                    }) | safe }}
                                    {{ Html.ValidationMessage('username', ModelState) | safe }}
                                    <div class="form-text">3-30 characters. Letters, numbers, underscores, and hyphens only.</div>
                                </div>
                                <div class="col-md-6">
                                    <label for="email" class="form-label">Email Address *</label>
                                    {{ Html.EmailBox('email', '', null, {
                                        class: 'form-control',
                                        required: true
                                    }) | safe }}
                                    {{ Html.ValidationMessage('email', ModelState) | safe }}
                                </div>
                            </div>

                            <div class="row mt-3">
                                <div class="col-md-6">
                                    <label for="phone" class="form-label">Phone Number *</label>
                                    {{ Html.TextBox('phone', '', null, {
                                        type: 'tel',
                                        class: 'form-control',
                                        autocomplete: 'tel',
                                        required: true
                                    }) | safe }}
                                    {{ Html.ValidationMessage('phone', ModelState) | safe }}
                                </div>
                                <div class="col-md-6">
                                    <label for="age" class="form-label">Age *</label>
                                    {{ Html.TextBox('age', '', null, {
                                        type: 'number',
                                        class: 'form-control',
                                        required: true,
                                        min: '18',
                                        max: '120'
                                    }) | safe }}
                                    {{ Html.ValidationMessage('age', ModelState) | safe }}
                                    <div class="form-text">Must be between 18 and 120 years old.</div>
                                </div>
                            </div>

                            <div class="row mt-3">
                                <div class="col-md-6">
                                    <label for="password" class="form-label">Password *</label>
                                    {{ Html.Password('password', null, {
                                        class: 'form-control',
                                        required: true,
                                        minlength: '8'
                                    }) | safe }}
                                    {{ Html.ValidationMessage('password', ModelState) | safe }}
                                    <div class="form-text">At least 8 characters with uppercase, lowercase, number, and special character.</div>
                                </div>
                                <div class="col-md-6">
                                    <label for="confirmPassword" class="form-label">Confirm Password *</label>
                                    {{ Html.Password('confirmPassword', null, {
                                        class: 'form-control',
                                        required: true
                                    }) | safe }}
                                    {{ Html.ValidationMessage('confirmPassword', ModelState) | safe }}
                                </div>
                            </div>

                            <div class="mt-3">
                                <label for="department" class="form-label">Department</label>
                                {{ Html.DropDownList('department', [
                                    {value: '', text: 'Select Department'},
                                    {value: 'Engineering', text: 'Engineering'},
                                    {value: 'Sales', text: 'Sales'},
                                    {value: 'Marketing', text: 'Marketing'},
                                    {value: 'HR', text: 'Human Resources'},
                                    {value: 'Finance', text: 'Finance'}
                                ], '', {class: 'form-select'}) | safe }}
                            </div>

                            <div class="mt-3">
                                <div class="form-check">
                                    {{ Html.CheckBox('acceptTerms', false, {class: 'form-check-input'}) | safe }}
                                    <label class="form-check-label" for="acceptTerms">
                                        I accept the terms and conditions
                                    </label>
                                </div>
                            </div>

                            <div class="mt-4">
                                {{ Html.SubmitButton('Register User', {class: 'btn btn-primary btn-lg'}) | safe }}
                                <button type="reset" class="btn btn-secondary">Clear Form</button>
                            </div>

                        {{ Html.EndForm() | safe }}
                    </div>
                    <div class="col-md-4">
                        <h4>HtmlHelper Form Methods</h4>
                        <ul class="list-group">
                            <li class="list-group-item"><small><strong>Html.BeginForm()</strong><br>Creates MVC form with automatic submission</small></li>
                            <li class="list-group-item"><small><strong>Html.TextBox()</strong><br>Text input with validation attributes</small></li>
                            <li class="list-group-item"><small><strong>Html.EmailBox()</strong><br>Email input with validation</small></li>
                            <li class="list-group-item"><small><strong>Html.Password()</strong><br>Password input with security attributes</small></li>
                            <li class="list-group-item"><small><strong>Html.DropDownList()</strong><br>Select dropdown with options</small></li>
                            <li class="list-group-item"><small><strong>Html.CheckBox()</strong><br>Checkbox input element</small></li>
                            <li class="list-group-item"><small><strong>Html.SubmitButton()</strong><br>Submit button with styling</small></li>
                            <li class="list-group-item"><small><strong>Html.ValidationMessage()</strong><br>Field-specific validation display</small></li>
                        </ul>

                        <div class="mt-3">
                            <h5>Code Example</h5>
                            <pre class="bg-light p-2 small"><code>{{ "{{ Html.BeginForm('action', 'Controller') | safe }}" }}
{{ "{{ Html.TextBox('name', '', null) | safe }}" }}
{{ "{{ Html.ValidationMessage('name', ModelState) | safe }}" }}
{{ "{{ Html.SubmitButton('Submit') | safe }}" }}
{{ "{{ Html.EndForm() | safe }}" }}</code></pre>
                        </div>
                    </div>
                </div>
            {% endif %}
        </div>
    </div>
</div>

<script>
// Bootstrap form validation
(function() {
    'use strict';
    window.addEventListener('load', function() {
        var forms = document.getElementsByClassName('needs-validation');
        var validation = Array.prototype.filter.call(forms, function(form) {
            form.addEventListener('submit', function(event) {
                if (form.checkValidity() === false) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
    }, false);
})();
</script>
{% endblock %}
