{% extends "shared/_base.njk" %}

{% block title %}{{ title }}{% endblock %}

{% block content %}
  <div style="margin-bottom: 20px; padding: 15px; background: #f8f9fa; border-radius: 4px;">
    <h3>Navigation</h3>
    <nav>
      <a href="/" style="margin-right: 15px; padding: 8px 12px; background: #007bff; color: white; text-decoration: none; border-radius: 4px;">Home</a>
      <a href="/about" style="margin-right: 15px; padding: 8px 12px; background: #6c757d; color: white; text-decoration: none; border-radius: 4px;">About</a>
      <a href="/home/demo" style="margin-right: 15px; padding: 8px 12px; background: #28a745; color: white; text-decoration: none; border-radius: 4px;">Demo Action</a>
      <a href="/home/json" style="margin-right: 15px; padding: 8px 12px; background: #17a2b8; color: white; text-decoration: none; border-radius: 4px;">JSON Demo</a>
      <a href="/home/search" style="margin-right: 15px; padding: 8px 12px; background: #ffc107; color: black; text-decoration: none; border-radius: 4px;">Search Demo</a>
      <a href="/products" style="margin-right: 15px; padding: 8px 12px; background: #e83e8c; color: white; text-decoration: none; border-radius: 4px;">Products Demo</a>
    </nav>
  </div>

  <h1>{{ title }}</h1>
  <p>{{ subtitle }}</p>
  
  <div style="margin: 20px 0;">
    <h2>Page Sections (Normal Hash Behavior)</h2>
    <nav style="margin-bottom: 20px;">
      <a href="#demo-section" style="margin-right: 10px; color: #007bff;">Jump to Demo Section</a>
      <a href="#features-section" style="margin-right: 10px; color: #007bff;">Jump to Features</a>
      <a href="#examples-section" style="margin-right: 10px; color: #007bff;">Jump to Examples</a>
    </nav>
  </div>
  
  <div style="margin: 20px 0;">
    <h2 id="demo-section">Demo: MVC-Style Controller Actions</h2>
    
    <!-- Test button to verify basic functionality -->
    <button onclick="testBasicFunction()" style="padding: 10px 15px; margin: 5px; background: #dc3545; color: white; border: none; border-radius: 4px; cursor: pointer;">
      Test Basic Click (Should Work)
    </button>
    
    <!-- Simple MVC test button -->
    <button mvc-controller="Home" 
            mvc-action="getJsonData" 
            mvc-result-target="results"
            mvc-success-template='<div style="background: #d1ecf1; color: #0c5460; padding: 10px; border-radius: 4px; margin: 10px 0;"><strong>MVC Works! JSON Data:</strong><br><pre style="background: #e9ecef; padding: 10px; border-radius: 3px; margin: 10px 0;">{{result}}</pre></div>'
            style="padding: 10px 15px; margin: 5px; background: #28a745; color: white; border: none; border-radius: 4px; cursor: pointer;">
      🧪 Test MVC Attributes (JSON Action)
    </button>
    
    <!-- Button using MVC attributes (like ASP.NET MVC) -->
    <button mvc-controller="Home" 
            mvc-action="demoAction" 
            mvc-data='{"source": "mvc-button"}' 
            mvc-result-target="results"
            mvc-loading-text="Calling action..."
            mvc-success-template='<div style="background: #d4edda; color: #155724; padding: 10px; border-radius: 4px; margin: 10px 0;"><strong>Demo Action Result:</strong><br><pre style="background: #e9ecef; padding: 10px; border-radius: 3px; margin: 10px 0;">{{result}}</pre></div>'
            mvc-error-template='<div style="background: #f8d7da; color: #721c24; padding: 10px; border-radius: 4px; margin: 10px 0;">Error: {{error}}</div>'
            style="padding: 10px 15px; margin: 5px; background: #007acc; color: white; border: none; border-radius: 4px; cursor: pointer;">
      Call Demo Action (MVC Style)
    </button>
    
    <!-- Alternative button with simple data -->
    <button mvc-controller="Home" 
            mvc-action="demoAction" 
            mvc-result-target="results"
            style="padding: 10px 15px; margin: 5px; background: #6f42c1; color: white; border: none; border-radius: 4px; cursor: pointer;">
      Simple MVC Call
    </button>
    
    <!-- Form using MVC attributes -->
    <form mvc-controller="Home" 
          mvc-action="submitForm" 
          mvc-result-target="results"
          mvc-reset-on-success="true"
          mvc-success-template='<div style="background: #d4edda; color: #155724; padding: 10px; border-radius: 4px; margin: 10px 0;"><strong>Form Submit Success:</strong><br><pre style="background: #e9ecef; padding: 10px; border-radius: 3px; margin: 10px 0;">{{result}}</pre></div>'
          mvc-error-template='<div style="background: #f8d7da; color: #721c24; padding: 10px; border-radius: 4px; margin: 10px 0;">Form Error: {{error}}</div>'
          style="margin: 20px 0; padding: 20px; border: 1px solid #ccc; border-radius: 4px;">
      <h3>Submit Form to Controller (MVC Style)</h3>
      <input type="text" name="username" placeholder="Enter username" style="padding: 8px; margin: 5px; width: 200px;" />
      <input type="email" name="email" placeholder="Enter email" style="padding: 8px; margin: 5px; width: 200px;" />
      <button type="submit" style="padding: 10px 15px; margin: 5px; background: #28a745; color: white; border: none; border-radius: 4px; cursor: pointer;">
        Submit Form (MVC)
      </button>
    </form>
    
    <hr style="margin: 30px 0;">
    
    <h3 id="features-section">Features Demonstration</h3>
    
    <!-- Redirect buttons -->
    <button mvc-controller="Home" 
            mvc-action="redirectToAbout" 
            style="padding: 10px 15px; margin: 5px; background: #17a2b8; color: white; border: none; border-radius: 4px; cursor: pointer;">
      Redirect to About Page
    </button>
    
    <button mvc-controller="Home" 
            mvc-action="redirectToGoogle" 
            style="padding: 10px 15px; margin: 5px; background: #fd7e14; color: white; border: none; border-radius: 4px; cursor: pointer;">
      Redirect to Google (External)
    </button>
    
    <button mvc-controller="Home" 
            mvc-action="redirectToAction" 
            style="padding: 10px 15px; margin: 5px; background: #6610f2; color: white; border: none; border-radius: 4px; cursor: pointer;">
      Redirect to Action
    </button>
    
    <!-- JSON data button -->
    <button mvc-controller="Home" 
            mvc-action="getJsonData" 
            mvc-result-target="results"
            mvc-success-template='<div style="background: #d1ecf1; color: #0c5460; padding: 10px; border-radius: 4px; margin: 10px 0;"><strong>JSON Data:</strong><br><pre style="background: #e9ecef; padding: 10px; border-radius: 3px; margin: 10px 0;">{{result}}</pre></div>'
            style="padding: 10px 15px; margin: 5px; background: #20c997; color: white; border: none; border-radius: 4px; cursor: pointer;">
      Get JSON Data
    </button>
    
    <!-- Conditional redirect form -->
    <form mvc-controller="Home" 
          mvc-action="processAndRedirect" 
          mvc-result-target="results"
          mvc-success-template='<div style="background: #d4edda; color: #155724; padding: 10px; border-radius: 4px; margin: 10px 0;"><strong>Process Result:</strong><br><pre style="background: #e9ecef; padding: 10px; border-radius: 3px; margin: 10px 0;">{{result}}</pre></div>'
          style="margin: 20px 0; padding: 20px; border: 1px solid #6c757d; border-radius: 4px;">
      <h4>Conditional Redirect Test</h4>
      <label style="display: block; margin: 10px 0;">
        <input type="checkbox" name="redirect" value="true" style="margin-right: 8px;">
        Redirect to Home after processing
      </label>
      <label style="display: block; margin: 10px 0;">
        <input type="checkbox" name="external" value="true" style="margin-right: 8px;">
        Redirect to GitHub (external)
      </label>
      <input type="text" name="data" placeholder="Enter some data" style="padding: 8px; margin: 5px; width: 200px;" />
      <button type="submit" style="padding: 10px 15px; margin: 5px; background: #6c757d; color: white; border: none; border-radius: 4px; cursor: pointer;">
        Process & Maybe Redirect
      </button>
    </form>
    
    <!-- Results display -->
    <div id="results" style="margin: 20px 0; padding: 15px; background: #f8f9fa; border-radius: 4px; min-height: 50px;">
      <strong>Results will appear here...</strong>
    </div>
    
    <hr style="margin: 30px 0;">
    
    <h3 id="examples-section">Usage Examples</h3>
    
    <div style="padding: 20px; background: #f8f9fa; border-radius: 4px; margin: 20px 0;">
      <h4>Hash Behavior Test</h4>
      <p>These links demonstrate normal hash behavior for page anchors:</p>
      <ul>
        <li><a href="#demo-section">Link to Demo Section</a> - Uses hash for page anchor</li>
        <li><a href="#features-section">Link to Features Section</a> - Scrolls to features</li>
        <li><a href="#examples-section">Link to Examples Section</a> - You're here!</li>
      </ul>
      <p>These links use client-side routing (no page reload):</p>
      <ul>
        <li><a href="/about">About Page</a> - Client-side navigation</li>
        <li><a href="/home/demo">Demo Action</a> - Controller action</li>
        <li><a href="/home/json">JSON Demo</a> - API endpoint</li>
        <li><a href="/home/search?q=TypeScript&category=programming">Search with Query Params</a> - Query parameter demo</li>
        <li><a href="/products?category=books&price_max=50">Products Demo</a> - Complex filtering with query parameters</li>
      </ul>
    </div>
    
    <h3>Legacy JavaScript Method</h3>
    <button id="legacy-btn" style="padding: 10px 15px; margin: 5px; background: #ffc107; color: black; border: none; border-radius: 4px; cursor: pointer;">
      Legacy callControllerAction
    </button>
  </div>

  <script>
    // Simple test function (kept for basic onclick demo)
    function testBasicFunction() {
      const resultsDiv = document.getElementById('results');
      resultsDiv.innerHTML = '<div style="background: #d4edda; color: #155724; padding: 10px; border-radius: 4px;">✅ Basic JavaScript is working!</div>';
    }
    
    // Make it global for onclick
    window.testBasicFunction = testBasicFunction;
    
    // Optimized MVC initialization - no artificial delays
    function initializeMVC() {
      const mvcButtons = document.querySelectorAll('[mvc-controller]');
      
      // Quick debug info
      const debugDiv = document.createElement('div');
      debugDiv.style = 'position: fixed; top: 10px; right: 10px; background: #343a40; color: white; padding: 8px; border-radius: 4px; z-index: 1000; max-width: 280px; font-size: 11px;';
      debugDiv.innerHTML = `
        <strong>MVC Status:</strong><br>
        Html Helper: ${!!window.Html ? '✅' : '❌'}<br>
        MVC Elements: ${mvcButtons.length}<br>
        <button onclick="this.parentElement.remove()" style="background: #dc3545; color: white; border: none; padding: 2px 4px; border-radius: 2px; margin-top: 3px; cursor: pointer; font-size: 10px;">×</button>
      `;
      document.body.appendChild(debugDiv);
      
      // Auto-remove debug info after 3 seconds
      setTimeout(() => debugDiv.remove(), 3000);
    }
    
    // Initialize immediately if DOM is ready, otherwise wait for DOMContentLoaded
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initializeMVC);
    } else {
      initializeMVC();
    }
      
      // Test document-level click listener
      document.addEventListener('click', (e) => {
        // Check for MVC attributes
        const target = e.target;
        const controller = target.getAttribute('mvc-controller');
        const action = target.getAttribute('mvc-action');
        
        if (controller && action) {
          e.preventDefault();
          
          // Call the action
          if (window.Html && window.Html.Action) {
            const resultTarget = target.getAttribute('mvc-result-target');
            
            window.Html.Action(controller, action, {}).then(result => {
              if (resultTarget) {
                const resultsDiv = document.getElementById(resultTarget);
                if (resultsDiv && result.success) {
                  const template = target.getAttribute('mvc-success-template') || 
                    `<div>Success: {{result}}</div>`;
                  resultsDiv.innerHTML = template.replace('{{result}}', JSON.stringify(result.data, null, 2));
                }
              }
            }).catch(err => {
              console.error('Action error:', err);
            });
          }
        }
      });
    
    // Legacy button example (for demonstrating Html.Action API)
    document.getElementById('legacy-btn').addEventListener('click', async function() {
      const resultsDiv = document.getElementById('results');
      resultsDiv.innerHTML = '<em>Calling legacy action...</em>';
      
      try {
        const result = await window.Html.Action('Home', 'demoAction', { source: 'legacy-button' });
        
        if (result.success) {
          resultsDiv.innerHTML = `
            <div style="background: #fff3cd; color: #856404; padding: 10px; border-radius: 4px; margin: 10px 0;">
              <strong>Legacy Demo Action Result:</strong><br>
              <pre style="background: #e9ecef; padding: 10px; border-radius: 3px; margin: 10px 0;">
${JSON.stringify(result.data, null, 2)}
              </pre>
            </div>
          `;
        } else {
          resultsDiv.innerHTML = `<span style="color: red;">Error: ${result.error}</span>`;
        }
      } catch (error) {
        resultsDiv.innerHTML = `<span style="color: red;">Error: ${error.message}</span>`;
      }
    });
  </script>
{% endblock %}